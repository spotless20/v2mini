#####################################################################
# 	Macros
#####################################################################
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(210)|float %}

    SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
    SETUP_VORON_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1

    SET_PIN PIN=caselight VALUE=1.00
    G92
    G28
    QUAD_GANTRY_LEVEL
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    G1 Z10 F3000                   ; move nozzle away from bed
    G21 ;metric values
    G90 ;absolute positioning
    M82 ;set extruder to absolute mode
    M107 ;start with the fan off
    G92 E0
    G1 X90 Y90 F6000
    M104 S{EXTRUDER_TEMP}
    M109 S{EXTRUDER_TEMP}
    VORON_PURGE
    PRINTING

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 F20000    ; move nozzle to remove stringing G0 Z1.00 X20.0 Y20.0 F20000 
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z10 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X180 Y180 F3600            ; park nozzle at rear
    #BED_MESH_CLEAR
    SET_PIN PIN=caselight VALUE=0.00
    HOTEND_AUS


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 5.0) %}
      {% set z_safe = 5.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  G92 E0
  G1 E-1.0 F1500.0
  G90
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% if printer["gcode_macro _ERCF_PAUSE"].is_paused|int != 0 %}
        M118 You can't resume the print without unlocking the ERCF first.
        M118 Run ERCF_UNLOCK and solve any issue before hitting Resume again
    {% else %}
        RESTORE_GCODE_STATE NAME=PAUSE_state
        G90
        {% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
            SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
        {% endif %}
        BASE_RESUME
    {% endif %}


[gcode_macro M600]
gcode:
    {% set X = params.X|default(50) %}
    {% set Y = params.Y|default(5) %}
    {% set Z = params.Z|default(10) %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-4 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    RESTORE_GCODE_STATE NAME=M600_state

